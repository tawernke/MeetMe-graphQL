{"version":3,"sources":["components/User.js","styles/Form.js","components/Signin.js","components/MultiSelectUsers.js","styles/Event.js","components/EventDetails.js","components/DeleteEvent.js","components/MyDatePicker.js","components/MyTimePicker.js","components/UpdateEvent.js","components/ProfilePlaces.js","components/Preferences.js","components/PlacesModal.js","components/YourPlaces.js","components/Profile.js","components/Place.js","components/Places.js","components/Discover.js","components/Signup.js","components/PleaseSignIn.js","components/Signout.js","components/NavBarSearch.js","components/Navbar.js","components/RequestReset.js","components/Reset.js","App.js","registerServiceWorker.js","index.js"],"names":["CURRENT_USER_QUERY","gql","_templateObject","loading","keyframes","Form_templateObject","Form","styled","form","_templateObject2","props","theme","red","SIGNIN_MUTATION","Signin_templateObject","Signin","state","email","name","password","saveToState","e","_this","setState","Object","defineProperty","target","value","_this2","this","react_default","a","createElement","react_apollo_browser_umd","mutation","variables","update","refetchQueries","query","signup","_ref","error","styles_Form","method","onSubmit","_ref2","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","preventDefault","sent","history","push","concat","data","signin","id","stop","_x","apply","arguments","disabled","aria-busy","className","placeholder","onChange","type","Link","to","Component","Option","es_select","MultiSelectUsers","users","allUsersJSX","allUsers","map","user","key","eventUsers","mode","defaultValue","style","width","height","addUsersToState","Event_templateObject","Event","Event_templateObject2","CREATE_EVENT_MUTATION","EventDetails_templateObject","ALL_USERS_QUERY","EventDetails_templateObject2","EventDetails","eventDetails","userNames","newEvent","userIds","newState","objectSpread","startDateChange","moment","dateChange","endDateChange","startTimeChange","timeChange","endTimeChange","time","boundary","format","date","handleChange","_e$target","start","selectedDateStart","set","get","end","selectedDateEnd","_this$state$eventDeta","location","title","description","deleteEvent","createEvent","styles_Event","userId","date_picker","time_picker","use12Hours","minuteStep","_ref3","components_MultiSelectUsers","onClick","DELETE_EVENT_MUTATION","DeleteEvent_templateObject","DeleteEvent","cache","payload","readQuery","ALL_USER_EVENTS_QUERY","events","filter","event","writeQuery","deleteEventMutation","window","confirm","eventId","MyDatePicker","newDateMoment","_this$props","updatePageDateChange","Fragment","eventDate","MyTimePicker","newTimeMoment","updatePageTimeChange","eventTime","SINGLE_EVENT_QUERY","UpdateEvent_templateObject","UPDATE_EVENT_MUTATION","UpdateEvent_templateObject2","UpdateEvent","updatedEvent","_","updateEvent","updateEventMutation","match","params","then","components_MyDatePicker","components_MyTimePicker","_ref4","components_DeleteEvent","ALL_PLACES_QUERY","ProfilePlaces_templateObject","Places","username","message","console","log","places","place","showModal","Preferences","addPreference","PlacesModal","isLoading","_this$props$place","address_1","rating","phone","city","country","modal","visible","onOk","onCancel","src","allowFullScreen","TabPane","tabs","CheckboxGroup","es_checkbox","Group","UPDATE_USER_MUTATION","YourPlaces_templateObject","SINGLE_USER_QUERY","YourPlaces_templateObject2","YourPlaces","image","largeImage","usersChange","fullOption","addUsersCallendar","closeModal","uploadPhoto","updateUserMutation","files","file","FormData","append","fetch","body","json","secure_url","updateUser","components_PlacesModal","alt","icon","defaultActiveKey","tab","ProfilePlaces","components_Preferences","currentUser","checkBoxClick","Profile_templateObject","components_Profile","eventClick","calEvent","url","eventDrop","optimisticResponse","__typename","dayClick","select","subtract","components_YourPlaces","Switch","Route","path","render","routeProps","components_EventDetails","assign","selectedUsers","components_UpdateEvent","exact","fetchPolicy","spin","lib_default","header","left","center","right","selectable","defaultDate","navLinks","editable","eventLimit","se","CREATE_PLACE_MUTATION","Place_templateObject","Place","createPlace","createPlaceMutation","placeType","address1","price","isToDoSaved","fontSize","color","deletePlace","isFavourited","isFavouriteSaved","Places_templateObject","some","toDo","savedPlace","components_Place","photos","postal_code","YELP_PLACES_QUERY","Discover_templateObject","Discover","placeSuggestions","savedPlaces","redirect","street","streetNumber","latitude","longitude","_this$state","searchPlaces","components_Places","favoriteBusinesses","business","SIGNUP_MUTATION","Signup_templateObject","components_Signup","signUp","signUpMuation","PleaseSignIn","me","children","components_Signin","SIGN_OUT_MUTATION","Signout_templateObject","Signout","signout","NavBarSearch","onSelect","userOptions","NavBarSearch_Option","showSearch","optionFilterProp","Header","Navbar","position","zIndex","menu","lineHeight","Item","components_Signout","components_NavBarSearch","REQUEST_RESET_MUTATION","RequestReset_templateObject","RequestReset","reset","called","htmlFor","RESET_MUTATION","Reset_templateObject","Reset","confirmPassword","resetToken","App_templateObject","App","components_Navbar","components_Discover","components_Reset","components_RequestReset","components_PleaseSignIn","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","client","ApolloClient","uri","request","operation","setContext","fetchOptions","credentials","clientState","resolvers","defaults","ReactDOM","BrowserRouter","src_App_0","document","getElementById","URL","process","origin","addEventListener","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.05f7d994.chunk.js","sourcesContent":["import React from 'react'\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport PropTypes from \"prop-types\";\n\nconst CURRENT_USER_QUERY = gql`\n  query {\n    me {\n      id\n      email\n      name\n      permissions\n    }\n  }\n`;\n\nconst User = props => (\n  <Query {...props} query={CURRENT_USER_QUERY}>\n    {payload => props.children(payload)}\n  </Query>\n);\n\nUser.propTypes = {\n  children: PropTypes.func.isRequired\n};\n\nexport default User;\nexport { CURRENT_USER_QUERY };\n","import styled, { keyframes } from \"styled-components\";\n\nconst loading = keyframes`\n  from {\n    background-position: 0 0;\n    /* rotate: 0; */\n  }\n\n  to {\n    background-position: 100% 100%;\n    /* rotate: 360deg; */\n  }\n`;\n\nconst Form = styled.form`\n  box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.05);\n  background: rgba(0, 0, 0, 0.02);\n  border: 5px solid white;\n  padding: 20px;\n  width: 50%;\n  font-size: 1.5rem;\n  line-height: 1.5;\n  font-weight: 600;\n  label {\n    display: block;\n    margin-bottom: 1rem;\n  }\n  input,\n  textarea,\n  select {\n    width: 100%;\n    padding: 0.5rem;\n    font-size: 1rem;\n    border: 1px solid black;\n    &:focus {\n      outline: 0;\n      /* border-color: ${props => props.theme.red}; */\n      border-color: \"#FF0000\";\n    }\n  }\n  input[type=\"submit\"] {\n    width: auto;\n    background: red;\n    color: white;\n    border: 0;\n    font-size: 2rem;\n    font-weight: 600;\n    padding: 0.5rem 1.2rem;\n  }\n  fieldset {\n    border: 0;\n    padding: 0;\n\n    &[disabled] {\n      opacity: 0.5;\n    }\n    &::before {\n      height: 10px;\n      content: \"\";\n      display: block;\n      background-image: linear-gradient(\n        to right,\n        #ff3019 0%,\n        #e2b04a 50%,\n        #ff3019 100%\n      );\n    }\n    &[aria-busy=\"true\"]::before {\n      background-size: 50% auto;\n      animation: ${loading} 0.5s linear infinite;\n    }\n  }\n`;\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { Link } from \"react-router-dom\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport Form from \"../styles/Form\";\n\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    signin(email: $email, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nclass Signin extends Component {\n  state = {\n    email: \"\",\n    name: \"\",\n    password: \"\"\n  };\n\n  saveToState = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <Mutation\n        mutation={SIGNIN_MUTATION}\n        variables={this.state}\n        update={this.update}\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n      >\n        {(signup, { error, loading }) => {\n          return (\n              <Form\n                method=\"post\"\n                onSubmit={async e => {\n                  e.preventDefault();\n                  this.setState({\n                    name: \"\",\n                    email: \"\",\n                    password: \"\"\n                  });\n                  const res = await signup();\n                  this.props.history.push(`/${res.data.signin.id}`);\n                }}\n              >\n                <fieldset disabled={loading} aria-busy={loading}>\n                  <h2>Sign in to your account</h2>\n                  <p>{error}</p>\n                  <input\n                    name=\"email\"\n                    value={this.state.email}\n                    className=\"form-control\"\n                    placeholder=\"email\"\n                    onChange={this.saveToState}\n                  />\n                  <input\n                    name=\"password\"\n                    value={this.state.password}\n                    type=\"password\"\n                    className=\"form-control\"\n                    placeholder=\"password\"\n                    onChange={this.saveToState}\n                  />\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary logon-button\"\n                  >\n                    Sign in\n                  </button>\n                  <p>\n                    No account? Click <Link to=\"/signup\">here</Link> to signup\n                  </p>\n                </fieldset>\n              </Form>\n          );\n        }}\n      </Mutation>\n    );\n  }\n}\n\nexport default Signin;\n","import React, {Component} from 'react'\nimport { Select } from 'antd'\nimport 'antd/dist/antd.css'\n\nconst Option = Select.Option;\n\nclass MultiSelectUsers extends Component {\n  \n  render() {\n    const allUsersJSX = this.props.allUsers.map(user => {\n      return <Option key={user.id}>{user.name}</Option>;\n    });\n    let users\n    if(this.props.eventUsers) {\n      users = this.props.eventUsers.map(user => {\n        return user.id\n      })\n    }\n    return(\n      <div className=\"multi-select-div\">\n        <Select\n          name=\"user\"\n          mode=\"multiple\"\n          defaultValue={users}\n          style={{ width: '100%', height: '50px' }}\n          placeholder=\"Please select\"\n          onChange={this.props.addUsersToState}\n          >\n          {allUsersJSX}\n        </Select>\n      </div>\n    )\n  }\n}\n\nexport default MultiSelectUsers","import styled, { keyframes } from \"styled-components\";\n\nconst loading = keyframes`\n  from {\n    background-position: 0 0;\n    /* rotate: 0; */\n  }\n\n  to {\n    background-position: 100% 100%;\n    /* rotate: 360deg; */\n  }\n`;\n\nconst Event = styled.form`\n  box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.05);\n  background: rgba(0, 0, 0, 0.02);\n  border: 5px solid white;\n  /* padding: 20px; */\n  /* font-size: 1.5rem; */\n  /* line-height: 1.5; */\n  /* font-weight: 600; */\n  /* label {\n    display: block;\n    margin-bottom: 1rem;\n  }\n  textarea, */\n\n  fieldset {\n    border: 0;\n    padding: 0;\n\n    &[disabled] {\n      opacity: 0.5;\n    }\n    &::before {\n      height: 10px;\n      content: \"\";\n      display: block;\n      background-image: linear-gradient(\n        to right,\n        #ff3019 0%,\n        #e2b04a 50%,\n        #ff3019 100%\n      );\n    }\n    &[aria-busy=\"true\"]::before {\n      background-size: 50% auto;\n      animation: ${loading} 0.5s linear infinite;\n    }\n  }\n`;\n\nexport default Event;\n","import React, {Component} from 'react'\nimport { Mutation, Query } from 'react-apollo'\nimport moment from 'moment'\nimport MultiSelectUsers from './MultiSelectUsers'\nimport { DatePicker, TimePicker } from 'antd'\nimport gql from 'graphql-tag'\nimport Event from '../styles/Event'\n\nconst CREATE_EVENT_MUTATION = gql `\n  mutation CREATE_EVENT_MUTATION(\n    $title: String\n    $location: String\n    $description: String\n    $start: String\n    $end: String\n    $user: [ID]\n  ) {\n    createEvent(\n      title: $title\n      location: $location\n      description: $description\n      start: $start\n      end: $end\n      user: $user\n    ) {\n      id\n      title\n      location\n      description\n      start\n      end\n      user {\n        id\n        name\n      }\n    }\n  }\n`\nconst ALL_USERS_QUERY = gql`\n query {\n   users {\n     id\n     name\n   }\n }\n`\n\nclass EventDetails extends Component {\n\n  state = {\n    eventDetails: {},\n    userNames: [],\n    newEvent: {}\n  }\n\n  componentDidMount() {\n    this.setState({\n      newEvent: {\n        start: moment(this.props.selectedDateStart).set('hour', moment().get('hour')),\n        end: moment(this.props.selectedDateEnd).set('hour', moment().get('hour')),\n      }\n    });\n  }\n\n  addUsersToState = userIds => {\n    const newState = {...this.state.newEvent}\n    newState.user = userIds\n    this.setState({\n      newEvent: newState\n    })\n  }\n\n  startDateChange = moment => {\n    this.dateChange(moment, 'start')\n  }\n\n  endDateChange = moment => {\n    this.dateChange(moment, 'end')\n  }\n\n  startTimeChange = moment => {\n    this.timeChange(moment, 'start')\n  }\n\n  endTimeChange = moment => {\n    this.timeChange(moment, 'end')\n  }\n\n  timeChange = (time, boundary) => {\n    let newState = this.state.newEvent\n    newState[boundary] = moment(time).format(\"YYYY-MM-DDTHH:mm:ss\");\n    this.setState({\n      newEvent: newState\n    })\n  }\n\n  dateChange = (date, boundary) => {\n    let newState = this.state.newEvent\n    newState[boundary] = moment(date).format(\"YYYY-MM-DDTHH:mm:ss\");\n    this.setState({\n      newEvent: newState \n    })\n  }\n\n  //Function that  adds all inputs (besides date and time) to state as they're entered\n  handleChange = e => {\n    const { name, value } = e.target\n    let newState = this.state.newEvent\n    newState[name] = value\n    this.setState({\n      newEvent: newState\n    });\n  };\n  \n  render() {\n    const {location, title, description} = this.state.eventDetails\n    const { deleteEvent } = this.props\n    return (\n      <Mutation \n        mutation={CREATE_EVENT_MUTATION} \n        variables={this.state.newEvent}\n        >\n        {(createEvent, { loading, error}) => {\n          return(\n          <div className=\"eventDetails\">\n            <Event onSubmit={async e => {\n              e.preventDefault()\n              await createEvent()\n              this.props.history.push(`/${this.props.userId}`)\n            }}>\n              <h2>Create Event</h2>\n              <fieldset disabled={loading} aria-busy={loading}>\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <p>Title:</p>\n                    <input \n                      name=\"title\" \n                      className=\"form-control placeholder-text\" \n                      value={title} \n                      placeholder =\"Add title Here\"\n                      onChange={this.handleChange}\n                      />\n                  </div>\n                  <div className=\"col\">\n                    <p>Location:</p>\n                    <input \n                      name=\"location\" \n                      className=\"form-control placeholder-text\" \n                      value={location} \n                      placeholder = \"Add location Here\"\n                      onChange={this.handleChange}\n                      />\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col\">\n                  <p>Description:</p>\n                    <input \n                      name=\"description\" \n                      className=\"form-control placeholder-text\" \n                      value={description} \n                      placeholder = \"Add a description Here\"\n                      onChange={this.handleChange}\n                      />\n                  </div>\n                  <div className=\"col\">\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <p>From:</p>\n                    <DatePicker \n                      onChange={this.startDateChange}\n                      value={moment(this.state.newEvent.start)}\n                      />\n                    <TimePicker \n                      use12Hours format=\"h:mm a\" \n                      onChange={this.startTimeChange}\n                      minuteStep={30}\n                      value={moment(this.state.newEvent.start)}\n                      />\n                  </div>\n                  <div className=\"col\">\n                    <p>To:</p>\n                    <DatePicker \n                      onChange={this.endDateChange}\n                      value={moment(this.state.newEvent.end)}\n                    />\n                    <TimePicker \n                      use12Hours format=\"h:mm a\" \n                      onChange={this.endTimeChange}\n                      minuteStep={30}\n                      value={moment(this.state.newEvent.end)}\n                    />\n                  </div>\n                </div>\n                <div className=\"row user-select\">\n                  <div className=\"col\">\n                    <p>Select Users:</p>\n                    <Query query={ALL_USERS_QUERY}>\n                      {({error, loading, data}) => {\n                        if(loading) return <p>Loading...</p>\n                        return (\n                        <MultiSelectUsers \n                          allUsers={data.users}\n                          addUsersToState={this.addUsersToState}\n                          />\n                        )\n                        }}\n                    </Query>\n                  </div>\n                  <div className=\"col\">\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <button className=\"btn btn-danger\" onClick={deleteEvent}>Delete</button>\n                  </div>\n                  <div className=\"col\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Sav{loading ? 'ing' : 'e'}</button>\n                  </div>\n                </div>\n              </fieldset>\n            </Event>\n          </div>\n        )}}\n      </Mutation>\n    )\n  }\n}\n\nexport { ALL_USERS_QUERY }\nexport default EventDetails\n\n","import React, { Component } from 'react';\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { ALL_USER_EVENTS_QUERY } from './Profile'\n\nconst DELETE_EVENT_MUTATION = gql`\n mutation DELETE_EVENT_MUTATION($id: ID!) {\n   deleteEvent(id: $id) {\n     id\n   }\n }\n`\n\nclass DeleteEvent extends Component {\n\n  update = (cache, payload) => {\n    //manually update the cache on the client so it matches the server\n    //1. Query the cache for the events we want\n    const data = cache.readQuery({ query: ALL_USER_EVENTS_QUERY})\n    //2. Filter the deleted event out of the page\n    data.events = data.events.filter(event => event.id !== payload.data.deleteEvent.id)\n    //3. put the events back\n    cache.writeQuery({ query: ALL_USER_EVENTS_QUERY, data})\n  }\n\n  deleteEvent = async (e, deleteEventMutation) => {\n    e.preventDefault();\n    if(window.confirm('Are you sure you want to delete this event?')) {\n      await deleteEventMutation();\n    }\n    this.props.history.push(`/${this.props.userId}`);\n  }\n\n  render() {\n    return (\n      <Mutation\n        mutation={DELETE_EVENT_MUTATION}\n        variables={{id: this.props.eventId}}\n        update={this.update}\n      >\n      {(deleteEvent, {error}) => {\n        return(\n        <button type=\"submit\" className=\"btn btn-danger\" onClick={(e) => this.deleteEvent(e, deleteEvent)}>Delete Event</button>\n        )}}\n      </Mutation>\n    );\n  }\n}\n\nexport default DeleteEvent;","import React, { Component } from 'react';\nimport { DatePicker } from \"antd\";\nimport moment from \"moment\";\n\nclass MyDatePicker extends Component {\n\n  dateChange = newDateMoment => {\n    const { updatePageDateChange, boundary } = this.props\n    updatePageDateChange(newDateMoment, boundary);\n  }\n\n  render() {\n    return (\n      <>\n        <DatePicker\n          disabled={this.props.loading}\n          onChange={this.dateChange}\n          value={moment(this.props.eventDate)}\n        />\n      </>\n    );\n  }\n}\n\nexport default MyDatePicker;","import React, { Component } from 'react';\nimport { TimePicker } from \"antd\";\nimport moment from \"moment\";\n\nclass MyTimePicker extends Component {\n\n  timeChange = newTimeMoment => {\n    const { updatePageTimeChange, boundary } = this.props;\n    updatePageTimeChange(newTimeMoment, boundary);\n  }\n\n  render() {\n    return (\n      <>\n        <TimePicker\n          use12Hours\n          format=\"h:mm a\"\n          minuteStep={30}\n          disabled={this.props.loading}\n          onChange={this.timeChange}\n          value={moment(this.props.eventTime)}\n        />\n      </>\n    );\n  }\n}\n\nexport default MyTimePicker;","import React, { Component } from \"react\";\nimport { Mutation, Query } from \"react-apollo\";\nimport moment from \"moment\";\nimport MultiSelectUsers from \"./MultiSelectUsers\";\nimport \"antd/dist/antd.css\";\nimport gql from \"graphql-tag\";\nimport DeleteEvent from \"./DeleteEvent\";\nimport { ALL_USERS_QUERY } from \"./EventDetails\";\nimport Event from \"../styles/Event\";\nimport MyDatePicker from \"./MyDatePicker\";\nimport MyTimePicker from \"./MyTimePicker\";\n\nconst SINGLE_EVENT_QUERY = gql`\n  query SINGLE_EVENT_QUERY($id: ID!) {\n    event(where: { id: $id }) {\n      id\n      title\n      location\n      description\n      start\n      end\n      user {\n        id\n        name\n      }\n    }\n  }\n`;\n\n\nconst UPDATE_EVENT_MUTATION = gql`\n  mutation UPDATE_EVENT_MUTATION(\n    $id: ID!\n    $title: String\n    $location: String\n    $description: String\n    $start: String\n    $end: String\n    $user: [ID]\n  ) {\n    updateEvent(\n      id: $id\n      title: $title\n      location: $location\n      description: $description\n      start: $start\n      end: $end\n      user: $user\n    ) {\n      id\n      title\n      location\n      description\n      start\n      end\n      user {\n        id\n        name\n      }\n    }\n  }\n`;\n\nclass UpdateEvent extends Component {\n  state = {\n    updatedEvent: {}\n  };\n\n  timeChange = (time, boundary) => {\n    let newState = this.state.updatedEvent;\n    newState[boundary] = moment(time).format(\"YYYY-MM-DDTHH:mm:ss\");\n    this.setState({\n      updatedEvent: newState\n    });\n  };\n\n  dateChange = (date, boundary) => {\n    let newState = this.state.updatedEvent;\n    newState[boundary] = moment(date).format(\"YYYY-MM-DDTHH:mm:ss\");\n    this.setState({\n      updatedEvent: newState\n    });\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    let newState = this.state.updatedEvent;\n    newState[name] = value;\n    this.setState({\n      updatedEvent: newState\n    });\n  };\n\n  addUsersToState = (_, allUsers) => {\n    const newState = { ...this.state.updatedEvent };\n    newState.user = allUsers.map(user => user.key);\n    this.setState({\n      updatedEvent: newState\n    });\n  };\n\n  updateEvent = async (e, updateEventMutation) => {\n    e.preventDefault();\n    await updateEventMutation({\n      variables: {\n        id: this.props.match.params.eventId,\n        ...this.state.updatedEvent\n      }\n    }).then(() => this.props.history.push(`/${this.props.userId}`));\n  };\n\n  render() {\n    return (\n      <Query\n        query={SINGLE_EVENT_QUERY}\n        variables={{\n          id: this.props.match.params.eventId\n        }}\n      >\n        {({ data, loading }) => {\n          const event = data.event;\n          if (loading) return <p>Loading...</p>;\n          if (!event) return <p>Item not found for ID {this.props.id}</p>;\n          return (\n            <Mutation mutation={UPDATE_EVENT_MUTATION} update={this.update}>\n              {(updateEvent, { loading, error }) => {\n                return (\n                  <div className=\"eventDetails\">\n                    <Event onSubmit={e => this.updateEvent(e, updateEvent)}>\n                      <h1>Update Event</h1>\n                      <fieldset disabled={loading} aria-busy={loading}>\n                        <div className=\"row\">\n                          <div className=\"col\">\n                            <p>Title:</p>\n                            <input\n                              name=\"title\"\n                              className=\"form-control placeholder-text\"\n                              defaultValue={event.title}\n                              placeholder=\"Add title Here\"\n                              onChange={this.handleChange}\n                            />\n                          </div>\n                          <div className=\"col\">\n                            <p>Location:</p>\n                            <input\n                              name=\"location\"\n                              className=\"form-control placeholder-text\"\n                              defaultValue={event.location}\n                              placeholder=\"Add location Here\"\n                              onChange={this.handleChange}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col\">\n                            <p>Description:</p>\n                            <input\n                              name=\"description\"\n                              className=\"form-control placeholder-text\"\n                              defaultValue={event.description}\n                              placeholder=\"Add a description Here\"\n                              onChange={this.handleChange}\n                            />\n                          </div>\n                          <div className=\"col\" />\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col\">\n                            <p>From:</p>\n                            <MyDatePicker\n                              eventDate={\n                                this.state.updatedEvent.start || event.start\n                              }\n                              loading={loading}\n                              boundary={\"start\"}\n                              updatePageDateChange={this.dateChange}\n                            />\n                            <MyTimePicker\n                              loading={loading}\n                              eventTime={\n                                this.state.updatedEvent.start || event.start\n                              }\n                              boundary={\"start\"}\n                              updatePageTimeChange={this.timeChange}\n                            />\n                          </div>\n                          <div className=\"col\">\n                            <p>To:</p>\n                            <MyDatePicker\n                              loading={loading}\n                              eventDate={\n                                this.state.updatedEvent.end || event.end\n                              }\n                              boundary={\"end\"}\n                              updatePageDateChange={this.dateChange}\n                            />\n                            <MyTimePicker\n                              loading={loading}\n                              eventTime={\n                                this.state.updatedEvent.end || event.end\n                              }\n                              boundary={\"end\"}\n                              updatePageTimeChange={this.timeChange}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row user-select\">\n                          <div className=\"col\">\n                            <p>Select Users:</p>\n                            <Query query={ALL_USERS_QUERY}>\n                              {({ error, loading, data }) => {\n                                if (loading) return <p>Loading...</p>;\n                                return (\n                                  <MultiSelectUsers\n                                    allUsers={data.users}\n                                    eventUsers={event.user}\n                                    addUsersToState={this.addUsersToState}\n                                  />\n                                );\n                              }}\n                            </Query>\n                          </div>\n                          <div className=\"col\" />\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col\">\n                            <DeleteEvent\n                              userId={this.props.userId}\n                              history={this.props.history}\n                              eventId={event.id}\n                            >\n                              Delet{loading ? \"ing\" : \"e\"} Event\n                            </DeleteEvent>\n                          </div>\n                          <div className=\"col\">\n                            <button type=\"submit\" className=\"btn btn-primary\">\n                              Sav{loading ? \"ing\" : \"e\"}\n                            </button>\n                          </div>\n                        </div>\n                      </fieldset>\n                    </Event>\n                  </div>\n                );\n              }}\n            </Mutation>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default UpdateEvent;\nexport { UPDATE_EVENT_MUTATION };\n","import React, { Component } from 'react'\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst ALL_PLACES_QUERY = gql`\n  query ALL_PLACES_QUERY($id: ID! $type: String!) {\n    places(userId: $id type: $type) {\n      id\n      address1\n      city\n      country\n      image\n      name\n      phone\n      rating\n      state\n      type\n      postal_code\n      price\n    }\n  }\n`;\n\nclass Places extends Component {\n  render() {\n    return (\n      <Query \n        query={ALL_PLACES_QUERY} \n        variables={{id: this.props.match.params.username, type: this.props.type}}\n        // fetchPolicy={\"network-only\"}\n      >\n        {({ data, error, loading }) => {\n          if (loading) return <p>Loading...</p>\n          if (error) return <p>Error: {error.message}</p>\n          console.log(data)\n          return <div>\n              <ul className=\"your-places-list\">\n                {data.places.map(place => (\n                  <li\n                    key={place.id}\n                    className=\"your-places-item\"\n                    onClick={() => this.props.showModal(place)}\n                  >\n                    {place.name}\n                  </li>\n                ))}\n              </ul>\n            </div>\n        }}\n      </Query>\n    )\n  }\n}\n\nexport default Places","import React, { Component } from 'react'\n\nclass Preferences extends Component {\n  \n  render() {\n    return(\n      <div className=\"preferences\">\n        <h3>Preferences</h3>\n        <form onSubmit={this.addPreference}>\n          <span>\n            <input type=\"text\" name=\"preferenceText\" className=\"form-control preferences-input\" placeholder=\"Add Preference\" />\n          </span>\n          <button type=\"submit\" className=\"btn btn-primary add-preference-button\">Add Item</button>\n        </form>\n        <ul className=\"profile-preferencesList\">\n        {/* {preferencesJSX} */}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default Preferences","import React, { Component } from 'react'\nimport { Modal } from 'antd'\n\nclass PlacesModal extends Component {\n\n  state = {\n    isLoading: true\n  }\n\n  render() {\n    const {name, address_1, rating, phone, city, state, country} = this.props.place\n    return(\n\n        <Modal\n          title={name}\n          visible={this.props.visible}\n          onOk={this.props.onOk}\n          onCancel={this.props.onCancel}\n          height={500}\n        >\n          <div>\n            <iframe className= 'map-iframe' src={`https://www.google.com/maps/embed/v1/search?q=${address_1}&key=AIzaSyAW_Dcil3II5E7B5xjyY2W3S4Tmq7oPNis`} allowFullScreen title=\"Google Map\"></iframe> \n          </div>\n          <p>Phone: {phone}</p>\n          <p>Address: {address_1}, {city}, {state}, {country}</p>\n          <p>Rating: {rating}</p>\n        </Modal>\n\n    )\n  }\n}\n\nexport default PlacesModal","import React, { Component } from 'react'\nimport { Mutation, Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport ProfilePlaces from './ProfilePlaces'\nimport Preferences from './Preferences'\nimport PlacesModal from './PlacesModal'\nimport { Tabs, Icon, Checkbox } from 'antd'\n\nconst TabPane = Tabs.TabPane\nconst CheckboxGroup = Checkbox.Group\n\nconst UPDATE_USER_MUTATION = gql`\n  mutation UPDATE_USER_MUTATION(\n    $id: ID!, \n    $image: String!\n    ) {\n    updateUser(id: $id, image: $image) {\n      id\n    }\n  }\n`;\n\nconst SINGLE_USER_QUERY = gql`\n  query SINGLE_USER_QUERY($id: ID!) {\n    user(id: $id) {\n      id\n      image\n      name\n    }\n  }\n`\n\nclass YourPlaces extends Component {\n  state = {\n    visible: false,\n    place: {},\n    loading: false,\n    image: \"\",\n    largeImage: '',\n  };\n\n  usersChange = (value, fullOption) => {\n    this.props.addUsersCallendar(value, fullOption);\n  };\n\n  showModal = place => {\n    this.setState({\n      visible: true,\n      place: place\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  uploadPhoto = async (event, updateUserMutation) => {\n    const files = event.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"meetMe\");\n    const res = await fetch(\n      \"https://api.cloudinary.com/v1_1/da7dkfklm/image/upload\",\n      {\n        method: \"POST\",\n        body: data\n      }\n    );\n    const file = await res.json();\n    const variables = \n      {\n        id: this.props.match.params.username,\n      image: file.secure_url\n      }\n    updateUserMutation({ variables })\n    this.setState({\n      image: file.secure_url,\n    });\n  };\n\n  render() {\n    return (\n      <Query \n        query={SINGLE_USER_QUERY}\n        variables={{\n          id: this.props.match.params.username\n        }}\n      >\n        {({data, loading}) => {\n          if (loading) return <p>Loading...</p>;\n          return(\n            <Mutation\n              mutation={UPDATE_USER_MUTATION}\n              variables={{ id: this.props.match.params, image: \"test\" }}\n              refetchQueries={[{ SINGLE_USER_QUERY }]}\n            >\n              {(updateUser, { loading, error }) => {\n                if (loading) return <p>Loading...</p>\n                if (error) return <p>Error: {error.message}</p>\n                return <React.Fragment>\n                  <h1>Meet {data.user.name}</h1>\n                  <PlacesModal visible={this.state.visible} onOk={this.closeModal} onCancel={this.closeModal} place={this.state.place} isLoading={this.state.isLoading} />\n                  {this.state.image || data.user.image ? <img src={this.state.image || data.user.image} alt=\"\" /> : <div className=\"upload-btn-wrapper\">\n                    <Icon className=\"upload-icon\" type=\"user-add\" />\n                    <input type=\"file\" onChange={e => this.uploadPhoto(e, updateUser)} name=\"myfile\" />\n                  </div>}\n                  <Tabs defaultActiveKey=\"1\">\n                    <TabPane tab={<span>\n                      <Icon type=\"star\" />\n                      To Try\n                  </span>} key=\"1\">\n                      <ProfilePlaces showModal={this.showModal} match={this.props.match} type={\"todo\"} />\n                    </TabPane>\n                    <TabPane tab={<span>\n                      <Icon type=\"heart\" />\n                      Favourites\n                  </span>} key=\"2\">\n                      <ProfilePlaces showModal={this.showModal} match={this.props.match} type={\"favourite\"} />\n                    </TabPane>\n                  </Tabs>\n                  <Preferences currentUser={this.props.currentUser} />\n                  <CheckboxGroup onChange={this.props.checkBoxClick} />\n                </React.Fragment>;\n              }}\n            </Mutation>\n          )\n        }}\n      </Query>\n    )\n  }\n\n}\n\nexport default YourPlaces","import React, { Component } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport FullCalendar from \"fullcalendar-reactwrapper\";\nimport { Route, Switch } from \"react-router-dom\";\nimport moment from \"moment\";\nimport gql from \"graphql-tag\";\nimport { Spin } from \"antd\";\nimport EventDetails from \"./EventDetails\";\nimport UpdateEvent from \"./UpdateEvent\";\nimport YourPlaces from \"./YourPlaces\";\nimport \"../fullcalendar.min.css\";\nimport {UPDATE_EVENT_MUTATION} from \"./UpdateEvent\";\n\nconst ALL_USER_EVENTS_QUERY = gql`\n  query ALL_USER_EVENTS_QUERY($id: ID!) {\n    events(userId: $id) {\n      id\n      title\n      location\n      description\n      start\n      end\n      user{\n        id\n        name\n      }\n    }\n    # preferences {\n    #   id\n    #   name\n    # }\n  }\n`;\n\nclass Profile extends Component {\n  state = {\n    selectedDateStart: \"\",\n    selectedDateEnd: \"\"\n  };\n\n  eventClick = calEvent => {\n    this.props.history.push(\n      `${this.props.match.url}/updateEvent/${calEvent.id}`\n    );\n  };\n\n  eventDrop = async(eventDetails, updateEvent) => {\n    await updateEvent({\n      variables: {\n        id: eventDetails.id,\n        start: eventDetails.start,\n        end: eventDetails.end\n      },\n      optimisticResponse: {\n        __typename: \"Mutation\",\n        updateEvent: {\n          __typename: \"Event\",\n          id: eventDetails.id,\n          start: eventDetails.start,\n          end: eventDetails.end,\n          title: eventDetails.title,\n          description: eventDetails.description,\n          location: eventDetails.location,\n          user: eventDetails.user,\n        }\n      }\n    });\n  };\n\n  dayClick = date => {\n    this.setState({\n      selectedDateStart: moment(date).set(\"hour\", moment().get(\"hour\"))\n    });\n    this.props.history.push(this.props.match.url + \"/newEvent\");\n  };\n\n  select = (start, end) => {\n    this.setState(\n      {\n        selectedDateStart: moment(start).set(\"hour\", moment().get(\"hour\")),\n        selectedDateEnd: moment(end)\n          .subtract(60, \"minute\")\n          .set(\"hour\", moment().get(\"hour\"))\n      },\n      () => this.props.history.push(this.props.match.url + \"/newEvent\")\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"entire-profile\">\n        <div className=\"profile-yourPlaces\">\n          <YourPlaces match={this.props.match} />\n        </div>\n        <div className=\"profile-main\">\n          <Switch />\n          <Route\n            path={this.props.match.url + \"/newEvent\"}\n            render={routeProps => (\n              <EventDetails\n                {...routeProps}\n                userId={this.props.match.params.username}\n                selectedDateStart={this.state.selectedDateStart}\n                selectedDateEnd={this.state.selectedDateEnd}\n                selectedUsers={this.selectedUsers}\n                timeChange={this.timeChange}\n                dateChange={this.dateChange}\n              />\n            )}\n          />\n          <Route\n            path={this.props.match.url + \"/updateEvent/:eventId\"}\n            render={routeProps => (\n              <UpdateEvent\n                {...routeProps}\n                userId={this.props.match.params.username}\n              />\n            )}\n          />\n          <Route\n            exact\n            path={this.props.match.url}\n            render={() => (\n              <Query\n                fetchPolicy={\"network-only\"}\n                query={ALL_USER_EVENTS_QUERY}\n                variables={{ id: this.props.match.params.username }}\n              >\n                {({ data, error, loading }) => {\n                  if (loading) return <Spin/>;\n                  if (error) return <p>Error: {error.message}</p>;\n                  return (\n                    <Mutation mutation={UPDATE_EVENT_MUTATION}>\n                      {(updateEvent, { loading, error }) => {\n                        return (\n                          <FullCalendar\n                            id=\"your-custom-ID\"\n                            header={{\n                              left: \"prev,next today myCustomButton\",\n                              center: \"title\",\n                              right: \"month,basicWeek,basicDay\"\n                            }}\n                            selectable={true}\n                            select={this.select}\n                            defaultDate={moment()}\n                            navLinks={true}\n                            editable={true}\n                            eventDrop={e => this.eventDrop(e, updateEvent)}\n                            eventLimit={true}\n                            events={data.events}\n                            eventClick={this.eventClick}\n                            dayClick={this.dayClick}\n                            se\n                          />\n                        );\n                      }}\n                    </Mutation>\n                  );\n                }}\n              </Query>\n            )}\n          />\n          <Switch />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\nexport { ALL_USER_EVENTS_QUERY };\n","import React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { Icon } from \"antd\";\nimport gql from \"graphql-tag\";\nimport { ALL_PLACES_QUERY } from './Places'\n\nconst CREATE_PLACE_MUTATION = gql`\n  mutation CREATE_PLACE_MUTATION(\n    $address1: String\n    $city: String\n    $country: String\n    $image: String\n    $name: String\n    $phone: String\n    $rating: Float\n    $state: String\n    $type: String\n    $postal_code: String\n    $price: String\n  ) {\n    createPlace(\n      address1: $address1\n      city: $city\n      country: $country\n      image: $image\n      name: $name\n      phone: $phone\n      rating: $rating\n      state: $state\n      type: $type\n      postal_code: $postal_code\n      price: $price\n    ) {\n      id\n      address1\n      city\n      country\n      image\n      name\n      phone\n      rating\n      state\n      type\n      postal_code\n      price\n      user {\n        id\n        name\n      }\n    }\n  }\n`;\n\nclass Place extends Component {\n  createPlace = async (e, createPlaceMutation, placeType) => {\n    await createPlaceMutation({\n      variables: {\n        type: placeType,\n        ...this.props.place\n      },\n    });\n  };\n\n  render() {\n    const { image, name, address1, phone, rating, price } = this.props.place\n    return <Mutation mutation={CREATE_PLACE_MUTATION} refetchQueries={[{ query: ALL_PLACES_QUERY }]}>\n        {(createPlace, { loading, error }) => <div className=\"justify-content-center col-xl-3 col-lg-4 col-sm-6 col-xs-12 discover-card\">\n            <div className=\"card\">\n              <img className=\"card-img-top\" src={image} alt=\"\" />\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{name}</h5>\n                <p className=\"card-text\">{address1}</p>\n                <p className=\"card-text\">{phone} </p>\n                <p className=\"card-text\">Rating: {rating} </p>\n                <p className=\"card-text\">Price: {price} </p>\n                {this.props.isToDoSaved ? <Icon className=\"saveIcon\" type=\"star\" theme=\"filled\" style={{ fontSize: 25, color: \"#FDBE34\" }} onClick={() => this.props.deletePlace(this.props.isToDoSaved[0].id)} /> : <Icon className=\"saveIcon\" type=\"star\" theme=\"outlined\" style={{ fontSize: 25, color: \"#FDBE34\" }} onClick={e => this.createPlace(e, createPlace, \"todo\")} />}\n                {this.props.isFavourited ? <Icon className=\"saveIcon\" type=\"heart\" theme=\"filled\" style={{ fontSize: 25, color: \"red\" }} onClick={() => this.props.deletePlace(this.props.isFavouriteSaved[0].id)} /> : <Icon className=\"saveIcon\" type=\"heart\" theme=\"outlined\" style={{ fontSize: 25, color: \"red\" }} onClick={e => this.createPlace(e, createPlace, \"favourite\")} />}\n              </div>\n            </div>\n          </div>}\n      </Mutation>;\n  }\n}\n\nexport default Place;\n","import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Place from \"./Place\";\n\nconst ALL_PLACES_QUERY = gql`\n  query ALL_PLACES_QUERY {\n    places {\n      id\n      address1\n      city\n      country\n      image\n      name\n      phone\n      rating\n      state\n      type\n      postal_code\n      price\n    }\n  }\n`;\n\nconst Places = props => {\n  return (\n    <Query query={ALL_PLACES_QUERY}>\n      {({ data, error, loading }) => {\n        if (loading) return <p>Loading...</p>;\n        const yelpPlaces = props.places.map(place => {\n          let isToDoSaved = false;\n          let isFavourited = false;\n          if (data) {\n            isToDoSaved = data.places.some(toDo => {\n              return place.name === toDo.name && toDo.type === \"todo\";\n            });\n            isFavourited = data.places.some(savedPlace => {\n              return (\n                place.name === savedPlace.name &&\n                savedPlace.type === \"favourite\"\n              );\n            });\n          }\n          return (\n            <Place\n              place={{\n                address1: place.location.address1,\n                city: place.location.city,\n                country: place.location.country,\n                image: place.photos[0],\n                name: place.name,\n                phone: place.phone,\n                rating: place.rating,\n                state: place.location.state,\n                postal_code: place.location.postal_code,\n                price: place.price\n              }}\n              isToDoSaved={isToDoSaved}\n              isFavourited={isFavourited}\n            />\n          );\n        });\n        return yelpPlaces;\n      }}\n    </Query>\n  );\n};\n\nexport default Places;\nexport { ALL_PLACES_QUERY };\n","import React, { Component } from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Places from \"./Places\";\nimport { Spin } from \"antd\";\n\nconst YELP_PLACES_QUERY = gql`\n  query YELP_PLACES_QUERY($latitude: Float, $longitude: Float) {\n    favoriteBusinesses(latitude: $latitude, longitude: $longitude) {\n      business {\n        name\n        phone\n        price\n        location {\n          address1\n          city\n          state\n          postal_code\n          country\n        }\n        photos\n        rating\n      }\n    }\n  }\n`;\n\nclass Discover extends Component {\n  state = {\n    placeSuggestions: [],\n    savedPlaces: [],\n    redirect: false,\n    city: \"\",\n    street: \"\",\n    streetNumber: \"\",\n    isLoading: false,\n    location: {\n      latitude: 49.28531,\n      longitude: -123.11385\n    }\n  };\n\n  // componentDidMount() {\n  //   new Promise((resolve, reject) => {\n  //     navigator.geolocation.getCurrentPosition(pos => {\n  //       const coord = {\n  //         latitude: pos.coords.latitude,\n  //         longitude: pos.coords.longitude\n  //       };\n  //       resolve(coord);\n  //     });\n  //   }).then(coord =>\n  //     this.setState({\n  //       location: coord,\n  //       isLoading: false\n  //     })\n  //   );\n  // }\n\n  render() {\n    const { streetNumber, street, city } = this.state;\n    return (\n      <>\n        {this.state.isLoading ? (\n          <p>Loading...</p>\n        ) : (\n          <Query query={YELP_PLACES_QUERY} variables={this.state.location}>\n            {({ data, error, loading }) => {\n              if (loading) return <Spin />;\n              if (error) return <p>Error: {error.message}</p>;\n              return (\n                <div className=\"discover-page\">\n                  <div>\n                    <div>\n                      <h5 className=\"discover-current-address\">\n                        {streetNumber}, {street}, {city}\n                      </h5>\n                      <img\n                        className=\"discover-location-icon\"\n                        alt=\"\"\n                        src=\"/location_on-24px.svg\"\n                      />\n                      <h4 className=\"discover-location-heading\">\n                        Showing places near you\n                      </h4>\n                    </div>\n                    <form\n                      className=\"discover-form-search\"\n                      onSubmit={e => {\n                        this.searchPlaces(e);\n                      }}\n                    >\n                      <input\n                        className=\"discover-search-textbox form-control\"\n                        name=\"location\"\n                        placeholder=\"Add a location here\"\n                      />\n                      <input\n                        className=\"discover-search-textbox form-control\"\n                        name=\"searchTerm\"\n                        placeholder=\"Add a search term here. (eg. coffee, bar)\"\n                      />\n                      <button className=\"btn btn-primary\" type=\"submit\">\n                        Search\n                      </button>\n                    </form>\n                    <div className=\"discover-container\">\n                      <div className=\"row justify-content-center\">\n                        <div className=\"card-deck\">\n                          <Places places={data.favoriteBusinesses.business} />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            }}\n          </Query>\n        )}\n      </>\n    );\n  }\n}\n\nexport default Discover;\n","import React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { CURRENT_USER_QUERY } from \"./User\";\n\nconst SIGNUP_MUTATION = gql`\n  mutation SIGNUP_MUTATION(\n    $email: String!\n    $name: String!\n    $password: String!\n  ) {\n    signup(email: $email, name: $name, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nclass Signup extends Component {\n  state = {\n    email: \"\",\n    name: \"\",\n    password: \"\"\n  };\n\n  saveToState = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  signUp = async (e, signUpMuation) => {\n    e.preventDefault()\n    const res = await signUpMuation();\n    this.props.history.push(`/${res.data.signup.id}`)\n    this.setState({\n      name: '',\n      email: '',\n      password: ''\n    })\n  }\n\n  render() {\n    return (\n      <Mutation\n        mutation={SIGNUP_MUTATION}\n        variables={this.state}\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n      >\n        {(signup, { error, loading }) => (\n            <form method=\"post\" onSubmit={e => this.signUp(e, signup)}>\n              <fieldset disabled={loading} aria-busy={loading}>\n                <h2>Sign up for an account</h2>\n                <p>{error}</p>\n                <input name=\"email\" className=\"form-control\" placeholder=\"email\" onChange={this.saveToState} />\n                <input name=\"name\" className=\"form-control\" placeholder=\"name\" onChange={this.saveToState} />\n                <input name=\"password\" className=\"form-control\" placeholder=\"password\" type=\"password\" onChange={this.saveToState} />\n                <button type=\"submit\" className=\"btn btn-primary logon-button\">\n                  Signup\n                </button>\n              </fieldset>\n            </form>\n          )}\n      </Mutation>\n    );\n  }\n}\n\nexport default Signup;\nexport { SIGNUP_MUTATION };\n","import React from 'react'\nimport { Query } from \"react-apollo\"\nimport { CURRENT_USER_QUERY } from './User'\nimport Signin from './Signin'\n\nconst PleaseSignIn = props => (\n  <Query query={CURRENT_USER_QUERY}>\n    {({data, loading}) => {\n      if(loading) return <p>Loading...</p>\n      if(!data.me) {\n        return <Signin history={props.history}/>\n      }\n      return props.children\n    }}\n  </Query>\n)\n\nexport default PleaseSignIn","import React from \"react\";\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport {CURRENT_USER_QUERY} from './User'\n\nconst SIGN_OUT_MUTATION = gql`\n  mutation SIGN_OUT_MUTATION {\n    signout {\n      message\n    }\n  }\n`;\n\nconst Signout = props => (\n  <Mutation mutation={SIGN_OUT_MUTATION} refetchQueries={[{ query: CURRENT_USER_QUERY}]}>\n    {signout => <p onClick={signout}>Sign Out</p>}\n  </Mutation>\n);\n\nexport default Signout","import React, { Component } from \"react\";\nimport { Select } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { Query } from \"react-apollo\";\nimport { ALL_USERS_QUERY } from \"./EventDetails\";\n\nconst Option = Select.Option;\n\nclass NavBarSearch extends Component {\n  onSelect = value => {\n    this.props.history.push(`/${value}`);\n  };\n\n  render() {\n    return (\n      <Query query={ALL_USERS_QUERY}>\n        {({ data, error, loading }) => {\n          if (loading) return <p>Loading...</p>;\n          const userOptions = data.users.map(user => (\n            <Option key={user.id} value={user.id}>{user.name}</Option>\n          ));\n          return (\n            <Select\n              showSearch\n              style={{ width: 200 }}\n              placeholder=\"Search other profiles\"\n              optionFilterProp=\"children\"\n              onSelect={this.onSelect}\n            >\n              {userOptions}\n            </Select>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default NavBarSearch;\n","import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { Menu, Layout } from \"antd\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport { Link } from \"react-router-dom\";\nimport Signout from \"./Signout\";\nimport NavBarSearch from './NavBarSearch'\nimport \"../App.css\"\n\nconst { Header } = Layout;\n\nconst Navbar = props => (\n  <Query query={CURRENT_USER_QUERY}>\n    {({ data: { me }, error, loading }) => (\n      <Header\n        style={{ position: \"fixed\", zIndex: 1, width: \"100%\" }}\n      >\n        {me && (\n          <React.Fragment>\n            <Menu theme=\"dark\" mode=\"horizontal\" style={{ lineHeight: \"64px\" }}>\n              <Menu.Item key=\"1\">\n                <Link to={`/${me.id}`}>Home</Link>\n              </Menu.Item>\n              <Menu.Item key=\"2\">\n                <Link to=\"/discover\">Discover</Link>\n              </Menu.Item>\n              <Menu.Item key=\"3\">\n                <Signout />\n              </Menu.Item>\n              <Menu.Item key=\"4\">\n                <NavBarSearch history={props.history} />\n              </Menu.Item>\n            </Menu>\n          </React.Fragment>\n        )}\n      </Header>\n    )}\n  </Query>\n);\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst REQUEST_RESET_MUTATION = gql`\n  mutation REQUEST_RESET_MUTATION($email: String!) {\n    requestReset(email: $email) {\n      message\n    }\n  }\n`;\n\nclass RequestReset extends Component {\n  state = {\n    email: \"\"\n  };\n  saveToState = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  render() {\n    return <Mutation mutation={REQUEST_RESET_MUTATION} variables={this.state}>\n        {(reset, { error, loading, called }) => <form method=\"post\" onSubmit={async e => {\n              e.preventDefault();\n              await reset();\n              this.setState({ email: \"\" });\n            }}>\n            <fieldset disabled={loading} aria-busy={loading}>\n              <h2>Request a password reset</h2>\n              <p>{error}</p>\n              {!error && !loading && called && <p>\n                  Success! Check your email for a reset link\n                </p>}\n              <label htmlFor=\"email\">\n                Email\n                <input type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"email\" value={this.state.email} onChange={this.saveToState} />\n              </label>\n              <button type=\"submit\" className=\"btn btn-primary\">Request Reset!</button>\n            </fieldset>\n          </form>}\n      </Mutation>;\n  }\n}\n\nexport default RequestReset;\n","import React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { CURRENT_USER_QUERY } from './User'\n\nconst RESET_MUTATION = gql`\n  mutation RESET_MUTATION(\n    $resetToken: String!\n    $password: String!\n    $confirmPassword: String!\n  ) {\n    resetPassword(\n      resetToken: $resetToken\n      password: $password\n      confirmPassword: $confirmPassword\n    ) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nclass Reset extends Component {\n  state = {\n    password: \"\",\n    confirmPassword: \"\"\n  };\n  saveToState = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  render() {\n    return (\n      <Mutation\n        mutation={RESET_MUTATION}\n        variables={{\n          resetToken: this.props.match.params.resetToken,\n          password: this.state.password,\n          confirmPassword: this.state.confirmPassword\n        }}\n        //when this mutation has been called, the CURRENT_USER_QUERY should be called and refreshed\n        // of their data\n        refetchQueries={[{ query: CURRENT_USER_QUERY}]}\n      >\n        {(reset, { error, loading, called }) => (\n          <form\n            method=\"post\"\n            onSubmit={async e => {\n              e.preventDefault();\n              await reset();\n              this.setState({ password: \"\", confirmPassword: \"\", });\n            }}\n          >\n            <fieldset disabled={loading} aria-busy={loading}>\n              <h2>Reset your Password</h2>\n              <p>{error}</p>\n              <label htmlFor=\"password\">\n                Password\n                <input\n                  className=\"form-control\"\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"password\"\n                  value={this.state.password}\n                  onChange={this.saveToState}\n                />\n              </label>\n              <label htmlFor=\"confirmPassword\">\n                Confirm your Password\n                <input\n                  className=\"form-control\"\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                  placeholder=\"Confirm your Password\"\n                  value={this.state.confirmPassword}\n                  onChange={this.saveToState}\n                />\n              </label>\n              <button className=\"btn btn-primary\" type=\"submit\">Reset your Password!</button>\n            </fieldset>\n          </form>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default Reset;\n","import React, { Component } from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Signin from \"./components/Signin\";\nimport Profile from \"./components/Profile\";\nimport Discover from \"./components/Discover\";\nimport Signup from \"./components/Signup\";\nimport { Route, Switch } from \"react-router-dom\";\nimport PleaseSignIn from \"./components/PleaseSignIn\";\nimport Navbar from \"./components/Navbar\";\nimport RequestReset from \"./components/RequestReset\";\nimport Reset from \"./components/Reset\";\nimport \"./App.css\";\n\nconst ALL_PLACES_QUERY = gql`\n  query ALL_PLACES_QUERY {\n    places {\n      id\n      address1\n      city\n      country\n      name\n      phone\n      price\n      rating\n      state\n      type\n      postal_code\n    }\n  }\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar history={this.props.history} />\n        <div className=\"app\">\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={(routeProps) => <Signin {...routeProps} />}\n            />\n            <Route exact path=\"/discover\" render={() => <Discover />} />\n            <Route\n              path=\"/signup\"\n              render={routeProps => <Signup {...routeProps} />}\n            />\n            <Route\n              path=\"/resetPassword/:resetToken\"\n              render={routeProps => <Reset {...routeProps} />}\n            />\n            <Route\n              path=\"/resetPassword/\"\n              render={routeProps => <RequestReset {...routeProps} />}\n            />\n            <PleaseSignIn history={this.props.history}>\n              <Query query={ALL_PLACES_QUERY}>\n                {({ data, error, loading }) => {\n                  if (loading) return <p>Loading..,</p>;\n                  if (error) return <p>Error: {error.message}</p>;\n                  return (\n                    <Switch>\n                      <Route\n                        path=\"/:username\"\n                        render={routeProps => (\n                          <Profile\n                            {...routeProps}\n                            {...this.state}\n                            showModal={this.showModal}\n                          />\n                        )}\n                      />\n                    </Switch>\n                  );\n                }}\n              </Query>\n            </PleaseSignIn>\n          </Switch>\n        </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ApolloProvider } from 'react-apollo'\nimport ApolloClient from \"apollo-boost\"\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nconst client = new ApolloClient({\n    uri: `http://localhost:4444`,\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include',\n        }\n      });\n    },\n    clientState: {\n      resolvers:{},\n      defaults: {}\n    }\n  })\n\nReactDOM.render(\n    <Router>\n      <ApolloProvider client={client}>\n        <Route \n          path='/' \n          render={(routeProps) => <App \n            {...routeProps} \n          />}\n        />\n      </ApolloProvider>\n    </Router>  \n    , document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}